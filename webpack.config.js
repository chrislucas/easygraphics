const path = require('path');
const webpack = require('webpack');
const CircularDependencyPlugin = require('circular-dependency-plugin')

 
module.exports = {
    entry: './app.js',
	/*plugins: [
    new CircularDependencyPlugin({
      // `onStart` is called before the cycle detection starts
      onStart({ compilation }) {
        console.log('start detecting webpack modules cycles');
      },
      // `onDetected` is called for each module that is cyclical
      onDetected({ module: webpackModuleRecord, paths, compilation }) {
        // `paths` will be an Array of the relative module paths that make up the cycle
        // `module` will be the module record generated by webpack that caused the cycle
        compilation.errors.push(new Error(paths.join(' -> ')))
      },
      // `onEnd` is called before the cycle detection ends
      onEnd({ compilation }) {
        console.log('end detecting webpack modules cycles');
      },
    })
    ],*/
    output: {
        path: path.resolve(__dirname, 'build/js'),
        filename: 'easygraphics.js',
        library: 'easygraphics',
        libraryTarget: 'umd',
        umdNamedDefine: true,
    },
    module: {
        loaders: [
			{
				test: /\.js$/,
				exclude: /node_modules/,
				loader: 'eslint-loader',
				enforce: 'pre'
			},
			{
                test: /\.js$/,
				query: {
                    presets: ['es2015']
                },
                loader: 'babel-loader',
		        exclude: /node_modules/,
            }
        ]
    },
    stats: {
        colors: true
    },
    devtool: 'source-map'
 };